{
    "collab_server" : "",
    "contents" : "library(ggplot2)\nlibrary(reshape2)\nlibrary(RColorBrewer)\nlibrary(gplots)\nlibrary(RSQLite)\nlibrary(dendextend)\nlibrary(ascii)\nsource('R/generalfunctions.R', echo=TRUE)\n\ndat <- read.csv(\"Data/counts.csv\", header=T)\nrows_to_keep= apply(dat[,-c(1)],1,FUN=function(x)\n      {\n          y <- 0;\n          if (all(x > 0 )) y <-1;\n          return(y)\n      }\n      )\n\ndat_filt <- list()\ndat_filt[[\"wide\"]]<- dat[as.logical(rows_to_keep > 0),]\ndat_filt[[\"long\"]]<- melt(dat_filt$wide, id=\"gene\", variable.name=\"Sample\")\n\nprint (dim(dat)[1], dim(dat_filt)[1])\n\n## Load Design\nmodel.mat <- read.csv(\"Data/expt_design.csv\", header=T)\nrow.names(model.mat) <- model.mat$Sample\ndat_filt[[\"long\"]]<- merge(dat_filt$long, model.matrix, by=\"Sample\", all=T)\n\n## Convert Counts to CPM\nlibSizes <- aggregate(data=dat_filt$long, value~Sample,FUN=sum)\nnames(libSizes)[2] <- \"libsize\"\ndat_filt$long <- merge(dat_filt$long, libSizes, by=\"Sample\", all=T)\ndat_filt$long$cpm <- dat_filt$long$value*1000000/dat_filt$long$libsize\n\n#Add Gene annotations\nlibrary(biomaRt)\nensembl = useMart(\"ensembl\",dataset=\"celegans_gene_ensembl\")\nfilters = listFilters(ensembl)\nattrs.to.get = listAttributes(ensembl)\ncommon_ids = getBM(attributes=\"ensembl_gene_id\", filters='wormbase_gene',value=dat_filt$wide$gene, mart = ensembl)\nannoDat <- getBM(attributes=c(\"ensembl_gene_id\",attrs.to.get[c(15,6:9,20,21,5),1]),filters = 'ensembl_gene_id',values =common_ids, mart = ensembl)\nrow.names(annoDat) <- annoDat$ensembl_gene_id\n\ng_1 <- ggplot(annoDat, aes(x=gene_biotype))+geom_bar(stat=\"count\")\ng_1<- ggplotly(g_1)\nhtmlwidgets::saveWidget(g_1,\"plots/lapierre_plotly_gene_biotype.html\")\n\ng1 <- ggplot(dat_filt$long,aes(x=Sample,y=cpm, fill=Gtype))+geom_boxplot()+scale_y_log10()\ng1 <- g1+theme(axis.text.x=element_text(size=8, angle=90))+xlab(\"\")\nprint(g1)\n\nprint(g1)\n\ng1 <- ggplot(dat_filt$long,aes(x=Sample,y=log(cpm+0.0000001), fill=Gtype))+geom_boxplot()\ng1+theme(axis.text.x=element_text(size=8, angle=90))+xlab(\"\")\nprint(g1)\n\nprint(g1)\n\ntmpDat.cpm <- dcast(data=dat_filt$long,gene~Sample, value.var =\"cpm\")\ng1<- ggMDSplot(tmpDat.cpm,modMat =model.matrix, modCol = 2,sampleLoc = \"Sample\", txtSize = 3)\nprint(g1)\n\nprint(g1)\nrm(g1)\nrm(tmpDat.cpm)\n\ndat_filt$long$logcpm <- log(dat_filt$long$cpm+0.00001)\ntmpDat.cpm <- dcast(data=dat_filt$long,gene~Sample, value.var =\"logcpm\")\ng1<- ggMDSplot(tmpDat.cpm,modMat =model.matrix, modCol = 2,sampleLoc = \"Sample\", txtSize = 3)\nprint(g1)\n\nprint(g1)\nrm(g1)\nrm(tmpDat.cpm)\n\ntmpDat.cpm <- dcast(dat_filt$long,gene~Sample,value.var = \"cpm\")[,-c(1)]\ngeneCor.pr <- cor(tmpDat.cpm, use=\"complete.obs\", method=\"pearson\")\ngeneCor.sp <- cor(tmpDat.cpm, use=\"complete.obs\", method=\"spearman\")\ngeneCor.log.pr <- cor(log(tmpDat.cpm+0.000001), use=\"complete.obs\", method=\"pearson\")\ngeneCor.log.sp <- cor(log(tmpDat.cpm+0.000001), use=\"complete.obs\", method=\"spearman\")\nmy_palette <- colorRampPalette(rev(brewer.pal(9,\"RdGy\")))(n = 300)\n\nheatmap.2(geneCor.pr, trace=\"none\", dendrogram=\"column\",  col=my_palette, scale=\"none\")\n\nheatmap.2(geneCor.pr, trace=\"none\", dendrogram=\"column\",  col=my_palette, scale=\"none\")\n\nheatmap.2(geneCor.sp, trace=\"none\", dendrogram=\"column\", col=my_palette, scale=\"none\")\n\nheatmap.2(geneCor.sp, trace=\"none\", dendrogram=\"column\", col=my_palette, scale=\"none\")\n\nheatmap.2(geneCor.log.pr, trace=\"none\", dendrogram=\"column\",  col=my_palette, scale=\"none\")\n\nheatmap.2(geneCor.log.pr, trace=\"none\", dendrogram=\"column\",  col=my_palette, scale=\"none\")\n\nheatmap.2(geneCor.log.sp, trace=\"none\", dendrogram=\"column\", col=my_palette, scale=\"none\")\n\nheatmap.2(geneCor.log.sp, trace=\"none\", dendrogram=\"column\", col=my_palette, scale=\"none\")\nrm(tmpDat.cpm)\n\ntmpDat.cpm.log <- dcast(dat_filt$long,gene~Sample,value.var = \"logcpm\")[,-c(1)]\nnames(tmpDat.cpm.log)\npairs.panels(tmpDat.cpm.log)\n\npairs.panels(tmpDat.cpm.log)\n\ntmpDat.cpm <- dcast(dat_filt$long,gene~Sample,value.var = \"cpm\")[,-c(1)]\ntmpDat.cpm <- t(tmpDat.cpm)\ntmpDat.cpm <- as.matrix(tmpDat.cpm)\ncolnames(tmpDat.cpm)\ntmpDat.cpm <- dist(tmpDat.cpm)\npar(bg=\"lightyellow\")\ndend <- as.dendrogram(hclust(tmpDat.cpm,method=\"average\"))\n##plot(hclust(tmpDat.cpm,method=\"average\"))\ncolors_to_use <- subset(dat_filt$long, gene==levels(factor(dat_filt$long$gene))[1])$Gtype\ncolors_to_use <- gsub(\"WT\",\"black\", colors_to_use)\ncolors_to_use <- gsub(\"glp_1_vit_2_GFP\",\"blue\", colors_to_use)\ncolors_to_use <- gsub(\"vit_2_GFP\",\"green\", colors_to_use)\ncolors_to_use <- gsub(\"glp_1\",\"red\", colors_to_use)\ncolors_to_use <- colors_to_use[order.dendrogram(dend)]\nlabels_colors(dend) <- colors_to_use\nplot(dend)\n\nplot(dend)\n\npar(bg=\"lightyellow\")\n##plot(hclust(tmpDat.cpm,method=\"ward.D\"))\ndend <- as.dendrogram(hclust(tmpDat.cpm,method=\"ward\"))\n##plot(hclust(tmpDat.cpm,method=\"average\"))\ncolors_to_use <- subset(dat_filt$long, gene==levels(factor(dat_filt$long$gene))[1])$Gtype\ncolors_to_use <- gsub(\"WT\",\"black\", colors_to_use)\ncolors_to_use <- gsub(\"glp_1_vit_2_GFP\",\"blue\", colors_to_use)\ncolors_to_use <- gsub(\"vit_2_GFP\",\"green\", colors_to_use)\ncolors_to_use <- gsub(\"glp_1\",\"red\", colors_to_use)\ncolors_to_use <- colors_to_use[order.dendrogram(dend)]\nlabels_colors(dend) <- colors_to_use\nplot(dend)\n\nplot(dend)\nrm(tmpDat.cpm)\n\ntmpDat.cpm <- dcast(dat_filt$long,gene~Sample,value.var = \"logcpm\")[,-c(1)]\ntmpDat.cpm <- t(tmpDat.cpm)\ntmpDat.cpm <- as.matrix(tmpDat.cpm)\ncolnames(tmpDat.cpm)\ntmpDat.cpm <- dist(tmpDat.cpm)\npar(bg=\"lightyellow\")\ndend <- as.dendrogram(hclust(tmpDat.cpm,method=\"average\"))\n##plot(hclust(tmpDat.cpm,method=\"average\"))\ncolors_to_use <- subset(dat_filt$long, gene==levels(factor(dat_filt$long$gene))[1])$Gtype\ncolors_to_use <- gsub(\"WT\",\"black\", colors_to_use)\ncolors_to_use <- gsub(\"glp_1_vit_2_GFP\",\"blue\", colors_to_use)\ncolors_to_use <- gsub(\"vit_2_GFP\",\"green\", colors_to_use)\ncolors_to_use <- gsub(\"glp_1\",\"red\", colors_to_use)\ncolors_to_use <- colors_to_use[order.dendrogram(dend)]\nlabels_colors(dend) <- colors_to_use\nplot(dend)\n\nplot(dend)\n\npar(bg=\"lightyellow\")\n##plot(hclust(tmpDat.cpm,method=\"ward.D\"))\ndend <- as.dendrogram(hclust(tmpDat.cpm,method=\"ward\"))\n##plot(hclust(tmpDat.cpm,method=\"average\"))\ncolors_to_use <- subset(dat_filt$long, gene==levels(factor(dat_filt$long$gene))[1])$Gtype\ncolors_to_use <- gsub(\"WT\",\"black\", colors_to_use)\ncolors_to_use <- gsub(\"glp_1_vit_2_GFP\",\"blue\", colors_to_use)\ncolors_to_use <- gsub(\"vit_2_GFP\",\"green\", colors_to_use)\ncolors_to_use <- gsub(\"glp_1\",\"red\", colors_to_use)\ncolors_to_use <- colors_to_use[order.dendrogram(dend)]\nlabels_colors(dend) <- colors_to_use\nplot(dend)\n\nplot(dend)\nrm(tmpDat.cpm)\n\n## Load Libraries\nlibrary(DSS)\nlibrary(edgeR)\nlibrary(biomaRt)\n\n## Setup the data\nX<-model.matrix(~Gtype, data=mod.mat)\n## For now column order matches the model.matrix\ndat_filt[[\"matrix\"]] <- as.matrix(dat_filt$wide[, -c(1)])\nrownames(dat_filt$matrix) <- dat_filt$wide$gene\nhead(dat_filt$matrix)\nseqData <- newSeqCountSet(dat_filt$matrix, as.data.frame(X))\nseqData <- estNormFactors(seqData)\nseqData <- estDispersion(seqData)\n\n##fit GLM\nfit.edgeR <- glmFit(dat_filt$matrix, X, lib.size=normalizationFactor(seqData),dispersion=dispersion(seqData))\nfitql.edgeR <- glmQLFit(dat_filt$matrix, X, lib.size=normalizationFactor(seqData),dispersion=dispersion(seqData))\n\npair_vector = sprintf(\"%s-%s\", \"Intercept\", \"GtypeWT\") # Samples to be compared\npair_contrast = makeContrasts(contrasts=pair_vector, levels=X) # Make contrast\n\nedgeR.F <-  glmQLFTest(glmfit=fitql.edgeR, contrast=pair_contrast)\nresTab <- edgeR.F$table\nresTab$wormbase_gene <- rownames(edgeR.F$table)\nresTab<-merge(resTab,annoDat,by=\"wormbase_gene\", all.x=T)\n\ng1<-qqGGplot(resTab$PValue)\n#g1 <-ggplotly(g1, tooltip=resTab$external_gene_name[order(resTab$PValue, decreasing=F)])\nprint(g1)\n\ng1 <- ggplot(resTab, aes(y=-log10(PValue),x=logFC, text=external_gene_name))\ng1<- g1+ geom_point(alpha=1/2,aes(colour = cut(PValue, c(0, 0.001, 0.05, 1))))\ng1 <- g1+ scale_color_manual(name = \"pvalue\",\n                     values = c(\"(0,0.001]\" = \"red\",\n                                  \"(0.001,0.05]\" = \"yellow\",\n                                  \"(0.05, 1]\" = \"blue\"),\n                     labels = c(\"<= 0.001\", \"0.001 < pvalue <= 0.05\", \"> 0.05\"))\nprint(g1)\n\ng11<-ggplotly(g1)\nhtmlwidgets::saveWidget(g11,\"/Users/aragaven/Documents/Research/RNotes/plots/lapierre_plotly_glp1_wt_volcano.html\")\n\n## tableHTML approach\n## t1<-tableHTML(resTab, theme=\"scientific\")\n## write_tableHTML(t1, file=\"lapierre_rna_seq_analysis_tmptable1.html\")\n\n## system2(\"sed\", args=c('s/class=table_resTab/id=\\\\\"glp1_wt\\\\\"/',\"lapierre_rna_seq_analysis_tmptable1.html\",\" > lapierre_rna_seq_analysis_tmptable11.html\"))\n## system2(\"sed\", args=c( \"'s/border=0>/class=\\\"display\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">/'\",\"lapierre_rna_seq_analysis_tmptable11.html\",\" > lapierre_rna_seq_analysis_table1.html\"))\n\ntab1 <- resTab[order(resTab$PValue),]\ntab1 <- datatable(tab1[1:1000,])\nhtmlwidgets::saveWidget(tab1,\"/Users/aragaven/Documents/Research/RNotes/plots/lapierre_dt_glp1_wt_table.html\")\n\npair_vector = sprintf(\"%s-%s\", \"Gtypevit_2_GFP\", \"GtypeWT\") # Samples to be compared\npair_contrast = makeContrasts(contrasts=pair_vector, levels=X) # Make contrast\n\nedgeR.F <-  glmQLFTest(glmfit=fitql.edgeR, contrast=pair_contrast)\nresTab2 <- edgeR.F$table\nresTab2$wormbase_gene <- rownames(edgeR.F$table)\nresTab2<-merge(resTab2,annoDat,by=\"wormbase_gene\", all.x=T)\n\ng2<-qqGGplot(resTab2$PValue)\nprint(g2)\n\ng21 <- ggplot(resTab2, aes(y=-log10(PValue),x=logFC, text=external_gene_name))+geom_point()\ng21<- g21+ geom_point(alpha=1/2,aes(colour = cut(PValue, c(0, 0.001, 0.05, 1))))\ng21 <- g21+ scale_color_manual(name = \"pvalue\",\n                     values = c(\"(0,0.001]\" = \"red\",\n                                  \"(0.001,0.05]\" = \"yellow\",\n                                  \"(0.05, 1]\" = \"blue\"),\n                     labels = c(\"<= 0.001\", \"0.001 < pvalue <= 0.05\", \"> 0.05\"))\nprint(g21)\n\ng211<-ggplotly(g21)\nhtmlwidgets::saveWidget(g211,\"/Users/aragaven/Documents/Research/RNotes/plots/lapierre_plotly_vit2_wt_volcano.html\")\n\ntab2 <- resTab2[order(resTab2$PValue),]\ntab2 <- datatable(tab2[1:1000,])\nhtmlwidgets::saveWidget(tab2,\"/Users/aragaven/Documents/Research/RNotes/plots/lapierre_dt_vit2_wt_table.html\")\n\npair_vector = sprintf(\"%s-%s\", \"Gtypevit_2_GFP\", \"Gtypeglp_1_vit_2_GFP\") # Samples to be compared\npair_contrast = makeContrasts(contrasts=pair_vector, levels=X) # Make contrast\n\nedgeR.F <-  glmQLFTest(glmfit=fitql.edgeR, contrast=pair_contrast)\nresTab3 <- edgeR.F$table\nresTab3$wormbase_gene <- rownames(edgeR.F$table)\nresTab3<-merge(resTab3,annoDat,by=\"wormbase_gene\", all.x=T)\n\ng3<-qqGGplot(resTab3$PValue)\n#g1 <-ggplotly(g1, tooltip=resTab$external_gene_name[order(resTab$PValue, decreasing=F)])\nprint(g3)\n\ng31 <- ggplot(resTab3, aes(y=-log10(PValue),x=logFC, text=external_gene_name))+geom_point()\ng31<- g31+ geom_point(alpha=1/2,aes(colour = cut(PValue, c(0, 0.001, 0.05, 1))))\ng31 <- g31+ scale_color_manual(name = \"pvalue\",\n                     values = c(\"(0,0.001]\" = \"red\",\n                                  \"(0.001,0.05]\" = \"yellow\",\n                                  \"(0.05, 1]\" = \"blue\"),\n                     labels = c(\"<= 0.001\", \"0.001 < pvalue <= 0.05\", \"> 0.05\"))\nprint(g31)\n\ng311<-ggplotly(g31)\nhtmlwidgets::saveWidget(g311,\"/Users/aragaven/Documents/Research/RNotes/plots/lapierre_plotly_vit2_vit2glp1_volcano.html\")\n\ntab3 <- resTab3[order(resTab3$PValue),]\ntab3 <- datatable(tab3[1:1000,])\nhtmlwidgets::saveWidget(tab3,\"/Users/aragaven/Documents/Research/RNotes/plots/lapierre_dt_vit2_vit2glp1_table.html\")\n\npair_vector = sprintf(\"%s-%s\", \"Intercept\", \"Gtypeglp_1_vit_2_GFP\") # Samples to be compared\npair_contrast = makeContrasts(contrasts=pair_vector, levels=X) # Make contrast\n\nedgeR.F <-  glmQLFTest(glmfit=fitql.edgeR, contrast=pair_contrast)\nresTab4 <- edgeR.F$table\nresTab4$wormbase_gene <- rownames(edgeR.F$table)\nresTab4<-merge(resTab4,annoDat,by=\"wormbase_gene\", all.x=T)\n\ng4<-qqGGplot(resTab4$PValue)\n#g1 <-ggplotly(g1, tooltip=resTab$external_gene_name[order(resTab$PValue, decreasing=F)])\nprint(g4)\n\ng41 <- ggplot(resTab4, aes(y=-log10(PValue),x=logFC, text=external_gene_name))+geom_point()\ng41<- g41+ geom_point(alpha=1/2,aes(colour = cut(PValue, c(0, 0.001, 0.05, 1))))\ng41 <- g41+ scale_color_manual(name = \"pvalue\",\n                     values = c(\"(0,0.001]\" = \"red\",\n                                  \"(0.001,0.05]\" = \"yellow\",\n                                  \"(0.05, 1]\" = \"blue\"),\n                     labels = c(\"<= 0.001\", \"0.001 < pvalue <= 0.05\", \"> 0.05\"))\nprint(g41)\n\ng411<-ggplotly(g41)\nhtmlwidgets::saveWidget(g411,\"/Users/aragaven/Documents/Research/RNotes/plots/lapierre_plotly_glp1_vit2glp1_volcano.html\")\n\ntab4 <- resTab4[order(resTab4$PValue),]\ntab4 <- datatable(tab4[1:1000,])\nhtmlwidgets::saveWidget(tab4,\"/Users/aragaven/Documents/Research/RNotes/plots/lapierre_dt_glp1_vit2glp1_table.html\")\n",
    "created" : 1517847493383.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1431787350",
    "id" : "2B2E0B0E",
    "lastKnownWriteTime" : 1511983922,
    "last_content_update" : 1511983922,
    "path" : "~/Documents/Rdata/EDA/R/lapierre_rna_seq_analysis.R",
    "project_path" : "R/lapierre_rna_seq_analysis.R",
    "properties" : {
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}